    1  sudo nano /etc/systemd/system/code-server.service
    2  sudo systemctl daemon-reload
    3  sudo systemctl enable code-server.service
    4  sudo systemctl start code-server.service
    5  sudo systemctl status code-server.service
    6  sudo systemctl start code-server.service
    7  sudo systemctl status code-server.service
    8  sudo nano /etc/systemd/system/code-server.service
    9  aws --version
   10  docker version
   11  ls
   12  cd ~
   13  ls
   14  cd /
   15  ls
   16  terraform version
   17  terraform --version
   18  cat auto-terraform.sh 
   19  sudo apt install terraform
   20  terraform --version
   21  cat auto-vscode_install.sh 
   22  nano auto-vscode_install.sh 
   23  sudo systemctl start code-server
   24  sudo systemctl status code-server
   25  which code-server
   26  sudo apt update
   27  sudo apt upgrade -y
   28  curl -fsSL https://code-server.dev/install.sh | sh
   29  nano /etc/systemd/system/code-server.service
   30  sudo nano /etc/systemd/system/code-server.service
   31  sudo systemctl daemon-reload
   32  sudo systemctl enable code-server.service
   33  sudo systemctl start code-server.service
   34  sudo systemctl status code-server.service
   35  sudo home/ubuntu/.config/code-server/config.yaml 
   36  sudo nano home/ubuntu/.config/code-server/config.yaml 
   37  cd home/ubuntu/.config/code-server
   38  cd/
   39  ls -la
   40  cd .config/
   41  ls
   42  cd code-server/
   43  ls
   44  nano config.yaml 
   45  sudo systemctl stop code-server
   46  sudo systemctl start code-server
   47  sudo systemctl status code-server
   48  terraform version
   49  touch main.tf variables.tf terraform.tfvars
   50  docker version
   51  touch Dockerfile.backend
   52  touch Dockerfile.frontend
   53  nano Dockerfile.backend 
   54  docker build dp9backend .
   55  docker build -t dp9backend .
   56  touch backend frontend
   57  mkdir backend frontend
   58  cd backend/
   59  docker build -t dp9backend .
   60  rm Dockerfile.backend Dockerfile
   61  touch Dockerfile
   62  docker build -t dp9backend .
   63  docker login
   64  docker image ls
   65  docker push djtoler/dp9backend
   66  docker image rm dp9backend:latest 
   67  docker image -t build djtoler/dp9backend .
   68  docker build image -t djtoler/dp9backend
   69  docker build -t djtoler/dp9backend
   70  docker build -t djtoler/dp9backend .
   71  docker image ls
   72  docker push djtoler/dp9backend
   73  cd .. && cd frontend
   74  docker build -t djtoler/dp9frontend .
   75  docker push djtoler/dp9frontend
   76  cd .. && cd backend
   77  ls
   78  mkdir dp9
   79  cd dp9/
   80  eksctl delete cluster --region=us-east-1 --name=cluster01
   81  ls
   82  cd dp9/
   83  ls
   84  mkdir eks_kubernetes_infrastructure && cd eks_kubernetes_infrastructure && touch eks_infrastructure.sh && chmod +x eks_infrastructure.sh
   85  ls
   86  nano eks_infrastructure.sh 
   87  ls
   88  mv eks_infrastructure.sh eks1_infrastructure.sh 
   89  ls
   90  nano eks2_service-deployment.sh
   91  ls
   92  chmod +x eks2_service-deployment.sh 
   93  ls
   94  nano eks2_service-deployment.sh
   95  touch eks3_apply-service-deployment.sh && nano eks3_apply-service-deployment.sh
   96  chmod +x eks3_apply-service-deployment.sh 
   97  ls
   98  touch auto-eks.sh && chmod +x auto-eks.sh
   99  nano auto-eks.sh 
  100  ls
  101  history
  102  mkdir ud_scripts
  103  cd ud_scripts/
  104  touch ud_jenkins.sh ud_docker.sh ud_terraform.sh
  105  chmod +x *.sh
  106  terraform init
  107  terraform validate
  108  terraform plan
  109  terraform init
  110  cd ..
  111  terraform init
  112  terraform validate
  113  terraform plan
  114  clear
  115  terraform apply -auto-approve
  116  git clone https://github.com/andmulLABS01/Deployment_9.git .
  117  mkdir repo && cd repo && git clone https://github.com/andmulLABS01/Deployment_9.git .
  118  cd ../ && cd terraform_kubernetes_infrastructure
  119  touch main.tf vpc.tf variables.tf
  120  curl -0 https://raw.githubusercontent.com/djtoler/automated_installation_scripts/main/apps/tf.tf
  121  nano vpc.tf 
  122  terraform init
  123  terraform validate
  124  terraform plan
  125  nano vpc.tf 
  126  terraform plan
  127  terraform apply
  128  cd ..
  129  ls
  130  cd Deployment9/
  131  ls
  132  cd frontend/
  133  nano fe_deployment.yaml 
  134  nano fe_service.yaml 
  135  nano fe_ingress.yaml 
  136  docker image ls
  137  docker pull djtoler/dp9frontend:latest
  138  docker build -t djtoler/dp9frontend:latest . 
  139  cd ..
  140  cd backend/
  141  docker pull djtoler/dp9backend:latest
  142  docker build -t djtoler/dp9backend:latest . 
  143  history
  144  docker push djtoler/dp9backend:latest
  145  docker push djtoler/dp9frontend:latest
  146  l
  147  ls
  148  clear
  149  curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
  150  chmod +x ./kubectl
  151  sudo mv ./kubectl /usr/local/bin/kubectl
  152  curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
  153  sudo mv /tmp/eksctl /usr/local/bin
  154  eksctl version
  155  eksctl create cluster cluster01  --vpc-private-subnets=subnet-02d4cc65e8dde7a07,subnet-0952efd7d50fc7f11  --vpc-public-subnets=subnet-003ea84136dc93f2e,subnet-0bcb542a46061faa1 --without-nodegroup
  156  aws --version
  157  aws configure
  158  eksctl create cluster cluster01  --vpc-private-subnets=subnet-02d86c9ea286e343b,subnet-02825fc3bf3076539  --vpc-public-subnets=subnet-0f99eb3c8aaa33dfd,subnet-014e8e3336bd05060 --without-nodegroup
  159  eksctl delete cluster --region=us-east-1 --name=cluster01
  160  eksctl create cluster cluster01  --vpc-private-subnets=subnet-02d86c9ea286e343b,subnet-02825fc3bf3076539  --vpc-public-subnets=subnet-0f99eb3c8aaa33dfd,subnet-014e8e3336bd05060 --without-nodegroup
  161  eksctl create cluster cluster02  --vpc-private-subnets=subnet-02d86c9ea286e343b,subnet-02825fc3bf3076539  --vpc-public-subnets=subnet-0f99eb3c8aaa33dfd,subnet-014e8e3336bd05060 --without-nodegroup
  162  eksctl create cluster cluster03  --vpc-private-subnets=subnet-02d86c9ea286e343b,subnet-02825fc3bf3076539  --vpc-public-subnets=subnet-0f99eb3c8aaa33dfd,subnet-014e8e3336bd05060 --without-nodegroup
  163  eksctl create nodegroup --cluster cluster03 --node-type t2.medium --nodes 2
  164  kubectl config get-contexts
  165  ls
  166  nano be_deployment.yaml 
  167  nano be_service.yaml 
  168  kubectl apply -f be_deployment.yaml 
  169  kubectl apply -f be_service.yaml 
  170  eksctl utils associate-iam-oidc-provider --cluster cluster03 --approve
  171  wget https://raw.githubusercontent.com/kura-labs-org/Template/main/iam_policy.json
  172  aws iam create-policy --policy-name AWSLoadBalancerControllerIAMPolicy --policy-document file://iam_policy.json
  173  eksctl create iamserviceaccount --cluster=cluster03 --namespace=kube-system --name=aws-load-balancer-controller --attach-policy-arn=arn:aws:iam::994181039877:policy/AWSLoadBalancerControllerIAMPolicy --approve
  174  kubectl apply --validate=false -f https://github.com/jetstack/cert-manager/releases/download/v1.5.4/cert-manager.yaml
  175  wget https://raw.githubusercontent.com/kura-labs-org/Template/main/v2_4_7_full.yaml
  176  kubectl apply -k "github.com/aws/eks-charts/stable/aws-load-balancer-controller/crds"
  177  ls
  178  kubectl apply -f v2_4_7_full.yaml
  179  touch ingress_class.yaml
  180  nano ingress_class.yaml 
  181  kubectl apply -f ingressClass.yaml
  182  kubectl apply -f ingress_class.yaml
  183  nano ingress_class.yaml 
  184  kubectl apply -f ingress_class.yaml
  185  cd ..
  186  cd frontend/
  187  nano fe_ingress.yaml 
  188  kubectl apply -f fe_ingress.yaml
  189  kubectl get ingress
  190  eksctl create nodegroup --help
  191  cd ../..
  192  ls
  193  cd eks_kubernetes_infrastructure/
  194  ls
  195  nano eks1_infrastructure.sh 
  196  touch notes.txt
  197  eksctl create nodegroup --cluster cluster03 --name dp9backend --node-type t2.medium --nodes 2 --node-private-networking --subnet-ids subnet-02d86c9ea286e343b,subnet-02825fc3bf3076539
  198  kubectl label nodes dp9backend role=backend
  199  LS
  200  ls
  201  kubectl get nodes
  202  kubectl label nodes ip-172-28-121-140.ec2.internal role=backend
  203  kubectl label nodesip-172-28-44-227.ec2.internal role=backend
  204  kubectl label nodes ip-172-28-44-227.ec2.internal role=backend
  205  cd ../ && cd Deployment9/backend
  206  ls
  207  kubectl apply -f be_deployment.yaml 
  208  kubectl apply -f be_service.yaml 
  209  kubectl get svc dp9backend-service
  210  cd ../
  211  cd frontend/
  212  ls
  213  docker build -t djtoler/dp9frontend .
  214  ls
  215  kubectl rollout restart deployment dp9-frontend-app
  216  docker build -t djtoler/dp9frontend .
  217  history
  218  docker push djtoler/dp9frontend:latest
  219  docker run -it --rm djtoler/dp9frontend /bin/bash
  220  docker image ls
  221  docker run -it --rm djtoler/dp9frontend:latest /bin/bash
  222  docker build -t djtoler/dp9frontend:latest .
  223  docker build --no-cache -t djtoler/dp9frontend:latest .
  224  docker push djtoler/dp9frontend:latest
  225  kubectl rollout restart deployment dp9-frontend-app
  226  ls
  227  cd Deployment9/
  228  cd frontend/
  229  touch Jenkinsfile
  230  nano Jenkinsfile 
  231  cd ..
  232  ls -la
  233  ls
  234  ls -la
  235  cd ..
  236  ls
  237  .gitignore
  238  touch .gitignore
  239  git init
  240  git remote add https://github.com/andmulLABS01/Deployment_9
  241  git remote add origin https://github.com/andmulLABS01/Deployment_9
  242  git add dockerimg_be/Dockerfile dockerimg_fe/Dockerfile 
  243  git add Deployment9/backend/be_deployment.yaml Deployment9/backend/be_service.yaml Deployment9/frontend/fe_deployment.yaml Deployment9/frontend/fe_service.yaml Deployment9/frontend/fe_ingress.yaml 
  244  git commit -m"Add Dockerfiles, deployment, service yaml files and ingress yaml file"
  245  git push
  246  git checkout -b main sysad
  247  git checkout -b sysad
  248  git add dockerimg_be/Dockerfile dockerimg_fe/Dockerfile 
  249  git add Deployment9/backend/be_deployment.yaml Deployment9/backend/be_service.yaml Deployment9/frontend/fe_deployment.yaml Deployment9/frontend/fe_service.yaml Deployment9/frontend/fe_ingress.yaml 
  250  git commit -m"Add Dockerfiles, deployment, service yaml files and ingress yaml file"
  251  git add .
  252  git git switch main
  253  git switch main
  254  git branch
  255  git checkout -b main
  256  git checout master
  257  git checkout master
  258  git add dockerimg_be/Dockerfile dockerimg_fe/Dockerfile 
  259  git add Deployment9/backend/be_deployment.yaml Deployment9/backend/be_service.yaml Deployment9/frontend/fe_deployment.yaml Deployment9/frontend/fe_service.yaml Deployment9/frontend/fe_ingress.yaml 
  260  git commit -m"Add Dockerfiles, deployment, service yaml files and ingress yaml file"
  261  git remote add origin https://github.com/djtoler/Deployment9
  262  git remote remove origin
  263  git remote add origin https://github.com/djtoler/Deployment9
  264  git add .
  265  git commit -m"files"
  266  git remote
  267  git remote origin
  268  git remote -v
  269  git push
  270  git checkout -b main
  271  git push --set-upstream origin main
  272  git push --force --set-upstream origin main
  273  ls
  274  history
  275  ls
  276  kubectl rollout restart deployment dp9-frontend-app
  277  kubectl get nodes
  278  eksctl delete nodegroup --cluster cluster03 --name dp9backend
  279  eksctl create nodegroup --cluster cluster03 --name dp9backend1 --node-type t2.medium --nodes 2 --node-private-networking --subnet-ids subnet-02d86c9ea286e343b,subnet-02825fc3bf3076539 --kubelet-extra-args --node-labels=role=backend
  280  eksctl create nodegroup --cluster cluster03 --name dp9backend1 --node-type t2.medium --nodes 2 --node-private-networking --subnet-ids subnet-02d86c9ea286e343b,subnet-02825fc3bf3076539 --kubelet-extra-args "--node-labels=role=backend"
  281  eksctl create nodegroup --help
  282  eksctl create nodegroup --cluster cluster03 --name dp9backend1 --node-type t2.medium --nodes 2 --node-private-networking --subnet-ids subnet-02d86c9ea286e343b,subnet-02825fc3bf3076539 --node-labels "role=backend"
  283  python3 buckets.py 
  284  pip install requests
  285  python3 buckets.py 
  286  aws configure
  287  python3 buckets.py 
  288  cat ~/.aws/credentials 
  289  python3 buckets.py 
  290  history
  291  eksctl create nodegroup --cluster cluster03 --name dp9backend --node-type t2.medium --nodes 1 --node-private-networking --subnet-ids subnet-02d86c9ea286e343b,subnet-02825fc3bf3076539 --node-labels "role=backend"
  292  history
  293  history
  294  eksctl delete nodegroup --cluster cluster03 --name dp9backend1
  295  aws --version
  296  pip install boto3
  297  audo apt install python-pip
  298  sudo apt install python-pip
  299  pip install boto3
  300  sudo pip install boto3
  301  pip install boto3
  302  sudo apt install python3-pip
  303  pip install boto3
  304  cd ..
  305  ls
  306  touch buckets.py
  307  docker image ls
  308  git remote -v
  309  git add .
  310  git commit -m'pushing all'
  311  git branch
  312  git switch main
  313  git pull origin master
  314  git branch
  315  git pull master
  316  git switch master
  317  git checkout main
  318  git pull origin main
  319  git merge master
  320  git commit -m'merged from master'
  321  git push
  322  cd jenkins_architecture_tf/
  323  ls
  324  terraform plan
  325  terraform apply
  326  terraform plan
  327  terraform apply
  328  kubectl get pods
  329  kubectl get pods > pods.txt
  330  kubectl describe pod dp9-backend-app-556584d99d-n7k72
  331  kubectl describe pod dp9-backend-app-556584d99d-n7k72 > consinpod.txt
  332  git add .
  333  git commit -m"updates jenkinsfile"
  334  git push
  335  git add .
  336  git commit -m"changed directory name"
  337  git push
  338  git add .
  339  git commit -m"changed directory name in jemkinsfile"
  340  git push
  341  git add .
  342  git commit -m"changed directory name in jemkinsfile2"
  343  git push
  344  git add .
  345  git commit -m"using nvm"
  346  git push
  347  git add .
  348  git commit -m"using nvm path"
  349  git push
  350  git add .
  351  git commit -m"rearragnge kill port and sleep"
  352  git push
  353  git add .
  354  git commit -m"fix response"
  355  git push
  356  git add .
  357  git commit -m"fix response2"
  358  git push
  359  git add .
  360  git commit -m"fix response3"
  361  git push
  362  git add .
  363  git commit -m"fix response4"
  364  git push
  365  git add .
  366  git commit -m"fix response5"
  367  git push
  368  git add .
  369  git commit -m"fix response6"
  370  git push
  371  ls
  372  git add .
  373  git commit -m"fixed Jenkinsfile dir paths"
  374  git push
  375  terraform plan -target=aws_instance.dp9_docker_agent_server
  376  cd jenkins_architecture_tf/
  377  terraform plan -target=aws_instance.dp9_docker_agent_server
  378  terraform apply -target=aws_instance.dp9_docker_agent_server
  379  cd ..
  380  git add .
  381  git commmit -m"changed jenkinsfile fe test, rebuilt docker instance"
  382  git commit -m"changed jenkinsfile fe test, rebuilt docker instance"
  383  git push
  384  git add .
  385  git commit -m"changed jenkinsfile fe test, rebuilt docker instance2"
  386  git push
  387  git commit -m"changed jenkinsfile fe test, rebuilt docker instance3"
  388  git add .
  389  git commit -m"changed jenkinsfile fe test, rebuilt docker instance4"
  390  git push
  391  cd Dep9/
  392  ls
  393  cd backend/
  394  ls
  395  touch test_app.py
  396  git add .
  397  git commit -m"changed jenkinsfile be, add remove images after build"
  398  cd ..
  399  git add .
  400  git commit -m"changed jenkinsfile be, add remove images after build2"
  401  git push
  402  git add .
  403  git commit -m"changed jenkinsfile be, add remove containers"
  404  git push
  405  git add .
  406  git commit -m"changed jenkinsfile be, add remove containers twice, changed be test url"
  407  git push
  408  git add .
  409  git commit -m"changed jenkinsfile be, add remove containers twice, changed be test url2"
  410  git push
  411  git add .
  412  git commit -m"changed rm container and image commands"
  413  git push
  414  git add .
  415  git commit -m"fixed dynamic ip command"
  416  git push
  417  git add .
  418  git commit -m"fixed dynamic ip command by making 1 shell block"
  419  git push
  420  kubectl config get-contexts
  421  kubectl config current-context
  422  docker image ls
  423  df -h
  424  curl -O https://raw.githubusercontent.com/djtoler/automated_installation_scripts/main/auto-jenkins.sh
  425  cd ..
  426  ls
  427  pwd
  428  curl -O https://raw.githubusercontent.com/djtoler/automated_installation_scripts/main/auto-jenkins.sh
  429  ls
  430  chmod +x auto-jenkins.sh 
  431  ./auto-jenkins.sh 
  432  lsclear
  433  systemctl status jenkins.service
  434  sudo systemctl restart jenkins
  435  sudo systemctl stop jenkins
  436  sudo apt-get remove --purge jenkins
  437  sudo rm -rf /var/lib/jenkins
  438  sudo rm -rf /var/log/jenkins
  439  sudo rm -rf /etc/default/jenkins
  440  sudo apt-get update
  441  wget -q -O - https://pkg.jenkins.io/debian-stable/jenkins.io.key | sudo apt-key add -
  442  sudo sh -c 'echo deb http://pkg.jenkins.io/debian-stable binary/ > /etc/apt/sources.list.d/jenkins.list'
  443  sudo apt-get update
  444  sudo apt-get install jenkins
  445  ls
  446  sudo apt install openjdk-8-jdk -y
  447  git add .
  448  cd dp9/
  449  git add .
  450  git commit -m"fixed jenkins agent"
  451  git push
  452  history
  453  aws iam attach-role-policy --role-name eksctl-cluster03-cluster-ServiceRole-RCDozbpim4AC --policy-arn arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
  454  history
  455  aws iam attach-role-policy --role-name eksctl-cluster03-cluster-ServiceRole-RCDozbpim4AC --policy-arn arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
  456  [200~aws eks create-addon --cluster-name cluster03 --addon-name amazon-cloudwatch-observability
  457  aws eks create-addon --cluster-name cluster03 --addon-name amazon-cloudwatch-observability
  458  aws eks create-addon --cluster-name cluster03 --addon-name amazon-cloudwatch-observability
  459  kubectl get pods -n amazon-cloudwatch
  460  kubectl logs -n amazon-cloudwatch cloudwatch-agent-hnxdv
  461  history > cloudwatchlogs.txt
  462  history
  463  eksctl delete cluster --region=us-east-1 --name=cluster03
  464  history
  465  npm install @aws-sdk/client-eks
  466  curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
  467  nvm install 16
  468  ls
  469  cd ..
  470  ls
  471  nvm install 10
  472  curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
  473  source ~/.bashrc
  474  nvm --version
  475  nvm install node
  476  npm install @aws-sdk/client-eks
  477  ls
  478  mkdir nodejsEKS && cp package.json nodejsEKS && rm package.json 
  479  ls
  480  cd nodejsEKS/
  481  ls
  482  nano package.json 
  483  mkdir kubernetes_notes
  484  cd kubernetes_notes/
  485  man kubectl
  486  kubectl --help
  487  eksctl --help
  488  eksctl anywhere --help
  489  eksctl associate --help
  490  eksctl create --help
  491  eksctl create nodegroup --help
  492  eksctl create nodegroup --help > create_nodegroup.txt
  493  kubectl delete ingress --help
  494  kubectl delete ingress -f
  495  kubectl delete ingress -f --help
  496  kubectl delete ingress --filename --help
  497  git clone https://github.com/yashksaini/quiz-network-server.git
  498  ls
  499  cd quiz-network-server/
  500  ls
  501  npm install
  502  cat /home/ubuntu/.npm/_logs/2023-11-29T18_05_44_698Z-eresolve-report.txt
  503  npm install --force
  504  npm start
  505  ls
  506  cd database/
  507  ls
  508  cat db.js 
  509  ls
  510  cd ..
  511  ls
  512  nano index.js
  513  cd routes/
  514  ls
  515  cat route.js 
  516  s
  517  ls
  518  cd ..
  519  ls
  520  in
  521  cat index.js 
  522  nano index.js
  523  ls
  524  cd dp9/
  525  ls
  526  cd Dep9/
  527  ls
  528  cd frontend/
  529  cat package.json 
  530  cat /home/ubuntu/.npm/_logs/2023-11-30T01_05_41_064Z-debug-0.log
  531  ls
  532  pwd
  533  cd .npm
  534  ls
  535  cd _logs/
  536  ls
  537  ls
  538  nano notes2.txt 
  539  rm -rf quiz-network-server/
  540  git clone https://github.com/yashksaini/quiz-network-server
  541  cd quiz-network-server/
  542  npm install
  543  npm install --force
  544  npm start
  545  npx kill-port 8000
  546  npm start
  547  cd ..
  548  touch notes2.txt
  549  cd quiz-network-server/
  550  nom start
  551  npm start
  552  npx kill-port 8000
  553  npm start
  554  nom install
  555  npm install
  556  npm install --force
  557  npm start
  558  npm build
  559  cd react/
  560  ls
  561  npm build
  562  npm run build
  563  cd src/
  564  npm run build
  565  npm build
  566  cd ..
  567  npm build
  568  npm run build
  569  ls
  570  npm start
  571  npm install
  572  llsclear
  573  cd ..
  574  npm start
  575  cd react/
  576  ls
  577  npm install --force
  578  npm i sass
  579  cd ..
  580  npm install
  581  npx kill-port 8000
  582  npm start
  583  npx kill-port 8000
  584  npm start
  585  npx kill-port 8000
  586  npm start
  587  npx kill-port 8000
  588  npm start
  589  npx kill-port 8000
  590  npm start
  591  npx kill-port 8000
  592  npm start
  593  ls
  594  cd quiz-network-server/
  595  ls
  596  npx kill-port 8000
  597  npm start
  598  npx kill-port 8000
  599  npm start
  600  npm install mongodb@6.3
  601  npm install mongodb@6.3 --force
  602  npm start
  603  ls
  604  cd quiz-network-server/
  605  ls
  606  touch notes.txt
  607  nano notes.txt 
  608  cd ..
  609  cd quiz-network-server/
  610  ls
  611  npm start
  612  mkdir docker && cd docker && mkdir fe_app be_app db && cd fe_app && touch Dockerfile && cd ../ &&& cd be_app && touch Dockerfile && cd ../ 
  613  mkdir docker && cd docker && mkdir fe_app be_app db && cd fe_app && touch Dockerfile && cd ../ && cd be_app && touch Dockerfile && cd ../ 
  614  cd fe_app/
  615  docker build -t fe_fpj:latest .
  616  docker run -d -p 3000:3000 my-node-app:latest
  617  docker run -d -p 3000:3000 fe_fpj:latest
  618  docker rmi fe_fpj:latest
  619  npx kill-port 3000
  620  docker run -d -p 3000:3000 fe_fpj:latest
  621  npx kill-port 3000
  622  docker exec -it fe_fpj /bin/bash
  623  docker exec -it  /bin/bash
  624  docker ps
  625  docker ps > containerlis.txt
  626  cd .
  627  cd ..
  628  cd be_app/
  629  docker build -t be_fpj:latest .
  630  docker exec -it be_fpj /bin/bash
  631  docker exec -it be_fpj:latest /bin/bash
  632  docker image ls
  633  docker ps > containerlis.txt
  634  docker exec -it be_fpj:latest /bin/bash
  635  docker run -d -p 8000:8000 be_fpj:latest
  636  npx kill-port 8000
  637  docker run -d -p 8000:8000 be_fpj:latest
  638  docker exec -it be_fpj:latest /bin/bash
  639  docker ps
  640  docker ps > containerlis.txt
  641  docker exec -it 2698e051f016 /bin/bash
  642  docker push djtoler/fe_fpj:latest
  643  docker tag fe_fpj:latest djtoler/fe_fpj:latest
  644  docker push djtoler/fe_fpj:latest
  645  docker tagbbe_fpj:latest djtoler/be_fpj:latest
  646  docker tag be_fpj:latest djtoler/be_fpj:latest
  647  docker push djtoler/be_fpj:latest
  648  py.py
  649  touch pyd.py
  650  python pyd.py
  651  python3 pyd.py
  652  ls
  653  cd react/
  654  ls
  655  npm install --force
  656  npm install &> install-output.txt
  657  node --version
  658  nvm use 10
  659  nvm install 14e
  660  nvm install 14
  661  nvm use 14
  662  npm install &> install-output1.txt
  663  npm start
  664  cd ..
  665  rm -rf quiz-network-server/
  666  history
  667  git clone https://github.com/yashksaini/quiz-network-server
  668  cd quiz-network-server/
  669  ls
  670  npm install
  671  npm install --force
  672  npm start
  673  npx kill-port 8000
  674  npm start
  675  git init -b main
  676  cd ..
  677  curl -O https://raw.githubusercontent.com/djtoler/automated_installation_scripts/main/auto-github_repo_create.sh
  678  ls
  679  chmod +x auto-github_repo_create.sh 
  680  ls
  681  ./auto-github_repo_create.sh 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 kurafpj
  682  git remote add origin https://github.com/djtoler/kurafpj
  683  cd quiz-network-server/
  684  git remote add origin https://github.com/djtoler/kurafpj
  685  git remote remove origin
  686  git remote add origin https://github.com/djtoler/kurafpj
  687  git add .
  688  git commit -m'first commit'
  689  rm -rf .git
  690  git init
  691  git init -b main
  692  git remote remove origin
  693  git remote add origin https://github.com/djtoler/kurafpj
  694  touch .gitignore
  695  git add .
  696  git commit -'first commit'
  697  git commit -m'first commit'
  698  git push origin main
  699  git push 
  700  git push --set-upstream origin main
  701  git push --set-upstream origin master
  702  git checkout main
  703  git checkout -b main
  704  git add .
  705  git commit -m'first commit from main'
  706  git push --set-upstream origin main
  707  git push origin main
  708  git pull
  709  git pull origin master
  710  git push 
  711  git push --set-upstream origin main
  712  git push 
  713  git push --set-upstream origin mai
  714  git push --set-upstream origin main
  715  git push --set-upstream origin main --force
  716  npm start
  717  pip install --upgrade openai
  718  mkdir etl
  719  cd etl/
  720  python transform.py 
  721  python3 transform.py 
  722  export OPENAI_API_KEY="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"
  723  echo OPENAI_API_KEY
  724  echo "OPENAI_API_KEY"
  725  echo $OPENAI_API_KEY
  726  python3 transform.py 
  727  npm i aws-sdk
  728  npm i aws-sdk --force
  729  cd yamls/
  730  touch ingress.yaml ingress_class.yaml
  731  cd yamls/
  732  touch redis-deployment.yaml ms1-deployment.yaml ms2-deployment.yaml
  733  touch redisservicet.yaml ms1servicet.yaml ms2service.yaml fe-service.yaml be-service.yaml
  734  ls
  735  history > commands.txt
  736  sudo apt update
  737  sudo apt install redis-server
  738  sudo vim /etc/redis/redis.conf
  739  grep -n "supervised directive" /etc/redis/redis.conf
  740  sudo grep -n "supervised directive" /etc/redis/redis.conf
  741  sudo grep -n "supervised" /etc/redis/redis.conf
  742  sudo nano /etc/redis/redis.conf
  743  nano +228 /etc/redis/redis.conf
  744  sudo nano +228 /etc/redis/redis.conf
  745  sudo systemctl restart redis
  746  sudo systemctl status redis
  747  redis-cli
  748  sudo grep -n "bind" /etc/redis/redis.conf
  749  IP=$(aws ec2 describe-instances --filters "Name=tag:Name,Values=DP9_Kubernetes_Agent_VSCode2" --query "Reservations[*].Instances[*].PublicIpAddress" --output text)
  750  echo $IP
  751  sudo sed -i "s/bind 127.0.0.1 ::1/bind $IP/" /etc/redis/redis.conf
  752  grep "bind" /etc/redis/redis.conf
  753  sudo grep "bind" /etc/redis/redis.conf
  754  sudo systemctl restart redis
  755  sudo systemctl 
  756  sudo systemctl status redis
  757  sudo systemctl start redis
  758  systemctl status redis-server.service
  759  redis-server /etc/redis/redis.conf --supervised systemd
  760  sudo redis-server /etc/redis/redis.conf --supervised systemd
  761  redis-server /etc/redis/redis.conf --supervised systemd
  762  sudo redis-server /etc/redis/redis.conf --supervised systemd
  763  sudo netstat -tulnp | grep 6379
  764  /etc/systemd/system/redis.service
  765  cd /etc/systemd/system/redis.service
  766  suco cd /etc/systemd/system/redis.service
  767  sudo cd /etc/systemd/system/redis.service
  768  sudo cat /etc/systemd/system/redis.service
  769  sudo nano +228 /etc/redis/redis.conf
  770  sudo systemctl restart redis
  771  systemctl status redis-server.service
  772  sudo nano +228 /etc/redis/redis.conf
  773  sudo grep -n "bind" /etc/redis/redis.conf
  774  sudo nano +56 /etc/redis/redis.conf
  775  sudo systemctl restart redis
  776  sudo apt-get purge redis-server
  777  sudo rm -rf /var/lib/redis
  778  sudo rm /etc/redis.conf
  779  sudo rm /etc/redis/redis.conf
  780  sudo nano +228 /etc/redis/redis.conf
  781  sudo apt-get update
  782  sudo apt-get install redis-server
  783  cd quiz-network-server/
  784  ls
  785  npm install redis
  786  npm install redis --force
  787  cd ..
  788  mkdir quiz-ms
  789  cd quiz-ms/
  790  cd ..
  791  rm quiz-ms/
  792  rm -rf quiz-ms/
  793  mkdir quiz-microservice
  794  cd quiz-microservice/
  795  touch index.js routes.js
  796  sudo apt update
  797  sudo apt install redis-server
  798  cd dp9/kubernetes_infrastructure_tf/
  799  ls
  800  terrafor init
  801  terraform init
  802  terraform plan
  803  terraform apply
  804  cd ../../
  805  ls
  806  cat auto-github_repo_create.sh 
  807  mkdir final-kube
  808  cd final-kube/
  809  cd..
  810  cd ..
  811  ls
  812  ./auto-github_repo_create.sh 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 finalKube
  813  cd final-kube/
  814  git remote add origin https://github.com/djtoler/finalKube.git
  815  git init
  816  git switch -b main
  817  git checkout -b main
  818  git remote add origin https://github.com/djtoler/finalKube.git
  819  git clone https://github.com/djtoler/finalKube
  820  rm-rf finalKube/
  821  rm -rf finalKube/
  822  git clone https://github.com/djtoler/kurafpj
  823  ls
  824  cd kurafpj/
  825  ls
  826  git add .
  827  git commit -m"first commit"
  828  git push
  829  cd ..
  830  git push
  831  cd kurafpj/
  832  kubectl 
  833  cd kura
  834  ls
  835  ls -la
  836  rm -rf .git
  837  cd ..
  838  ls -la
  839  git push origin main
  840  git push
  841  git push --set-upstream origin main
  842  git add .
  843  git commit -m"testing"
  844  cp kurafpj/ .
  845  ls
  846  copy -r kurafpj/ .
  847  cp -r kurafpj/ .
  848  pwd
  849  cp -r kurafpj/ /home/ubuntu/final-kube
  850  ls
  851  git add .
  852  git commit -m"org files"
  853  git push
  854  git push --set-upstream origin main
  855  git push --set-upstream --force origin main
  856  cd kurafpj/
  857  mv * ../
  858  ls
  859  cd ..
  860  ls
  861  git add .
  862  git commit -m"moved files to root"
  863  git push
  864  git add .
  865  git commit -m"updates URLs for Kube"
  866  git push
  867  touch create-cluster-sh && chmod +x create-cluster.sh
  868  touch create-cluster.sh && chmod +x create-cluster.sh
  869  ls
  870  rm create-cluster-sh 
  871  ls
  872  mkdir yamls
  873  rm -rf yamls/
  874  history > cmds.txt
